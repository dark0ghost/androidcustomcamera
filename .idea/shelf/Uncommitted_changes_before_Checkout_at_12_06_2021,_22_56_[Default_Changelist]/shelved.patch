Index: app/src/main/java/org/dark0ghost/camera/implementation/ImageStorage.kt
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package org.dark0ghost.camera.implementation\n\nimport java.io.OutputStream\n\ntypealias IntArrayBuffer = MutableList<Byte>\n\nopen class ImageStorage: OutputStream() {\n\n    private fun IntArrayBuffer.toStrings(): String {\n        TODO()\n    }\n\n    open val intArray: IntArrayBuffer = mutableListOf()\n\n    override fun write(b: Int) {\n        intArray.add(b.toByte())\n    }\n\n    override fun close() {\n        intArray.clear()\n        super.close()\n    }\n\n    fun getDataAndClose(): String {\n        val response = intArray.toString()\n        close()\n        return response\n    }\n\n}\n\n\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/app/src/main/java/org/dark0ghost/camera/implementation/ImageStorage.kt b/app/src/main/java/org/dark0ghost/camera/implementation/ImageStorage.kt
--- a/app/src/main/java/org/dark0ghost/camera/implementation/ImageStorage.kt	
+++ b/app/src/main/java/org/dark0ghost/camera/implementation/ImageStorage.kt	
@@ -2,18 +2,14 @@
 
 import java.io.OutputStream
 
-typealias IntArrayBuffer = MutableList<Byte>
+private typealias IntArrayBuffer = MutableList<Int>
 
 open class ImageStorage: OutputStream() {
 
-    private fun IntArrayBuffer.toStrings(): String {
-        TODO()
-    }
-
-    open val intArray: IntArrayBuffer = mutableListOf()
+    private val intArray: IntArrayBuffer = mutableListOf()
 
     override fun write(b: Int) {
-        intArray.add(b.toByte())
+        intArray.add(b)
     }
 
     override fun close() {
